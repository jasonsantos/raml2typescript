// ===={{filename}}============================
// {{title}}
// ----------- this file was generated by raml2typescript

{% macro printType(obj, level=0) -%}
    {% if obj.type == 'array' and obj.items.name -%}
        {{' '}}{{obj.items.name}}[];
    {%- elseif obj.type == 'object' and obj.items.name -%}
        {{' '}}{{obj.name}};
    {%- elseif obj.type == 'integer' -%}
        {{' '}}number // integer
    {%- elseif obj.type == 'date-only' -%}
        {{' '}}string; // date-only: (yyyy-mm-dd)
    {%- elseif obj.type == 'time-only' -%}
        {{' '}}string; // time-only: (hh:mm:ss[.ff...])
    {%- elseif obj.type == 'datetime-only' -%}
        {{' '}}string; // datetime-only: (yyyy-mm-ddThh:mm:ss[.ff...])
    {%- elseif obj.type == 'datetime' -%}
        {{' '}}string; // datetime -- RFC 3339 format: (yyyy-mm-ddThh:mm:ss[.ff...]Z)
    {%- elseif obj.type == 'object' and obj.items.name -%}
        {{' '}}{{obj.name}};
    {%- elseif obj.properties %} {
{% for key, value in obj.properties %}
{{config.indent(level)}}{{key}}:{{' '}}{{printType(value, level+4)}}{% endfor %}
    }
    {% else %}{{' '}}{{obj.type}};
    {% endif %}
{%- endmacro %}


{% for typeName, type in types %}
type {{typeName}} = {
    {% for propertyName, property in type.properties -%}
        {{propertyName}}: {{ printType(property) }}
    {%- endfor %}
}
{% endfor %}